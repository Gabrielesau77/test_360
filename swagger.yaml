openapi: 3.0.0
info:
  title: Employee 360 Evaluation API
  version: 1.0.0
  description: API RESTful para un sistema de evaluación 360 grados de empleados remotos
servers:
  - url: http://localhost:5000/api
    description: Servidor de desarrollo

components:
  schemas:
    Employee:
      type: object
      security:
        - bearerAuth: []
      required:
        - firstName
        - lastName
        - position
        - department
        - hireDate
      properties:
        id:
          type: string
          description: ID autogenerado del empleado
        firstName:
          type: string
          description: Nombre del empleado
        lastName:
          type: string
          description: Apellido del empleado
        position:
          type: string
          description: Puesto del empleado
        department:
          type: string
          description: Departamento del empleado
        hireDate:
          type: string
          format: date
          description: Fecha de contratación del empleado
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del empleado
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del empleado
      example:
        firstName: John
        lastName: Doe
        position: Developer
        department: IT
        hireDate: 2020-01-15

    Evaluation:
      type: object
      required:
        - period
        - status
        - type
        - employee
      properties:
        id:
          type: string
          description: ID autogenerado de la evaluación
        period:
          type: string
          description: Periodo de la evaluación (ej. "Q1 2023")
        status:
          type: string
          enum: [activa, cancelada]
          description: Estado de la evaluación
        type:
          type: string
          description: Tipo de evaluación
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la evaluación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la evaluación
      example:
        period: "Q1 2023"
        status: pending
        type: "Desempeño"

    Question:
      type: object
      required:
        - text
        - type
      properties:
        id:
          type: string
          description: ID autogenerado de la pregunta
        text:
          type: string
          description: Texto de la pregunta
        type:
          type: string
          enum: [rating, text]
          description: Tipo de pregunta (rating o texto)
        options:
          type: array
          items:
            type: string
          description: Opciones disponibles para preguntas de tipo rating
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la pregunta
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la pregunta
      example:
        text: "¿Cómo calificaría la capacidad de comunicación del empleado?"
        type: rating
        options:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"

    Response:
      type: object
      required:
        - evaluation
        - question
        - respondent
        - answer
      properties:
        id:
          type: string
          description: ID autogenerado de la respuesta
        evaluation:
          $ref: '#/components/schemas/Evaluation'
        question:
          $ref: '#/components/schemas/Question'
        respondent:
          $ref: '#/components/schemas/User'
        answer:
          type: string
          description: Respuesta proporcionada por el evaluador
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la respuesta
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la respuesta
      example:
        evaluation:
          $ref: '#/components/schemas/Evaluation'
        question:
          $ref: '#/components/schemas/Question'
        respondent:
          $ref: '#/components/schemas/User'
        answer: "4"

    User:
      type: object
      required:
        - username
        - email
        - password
        - role
      properties:
        id:
          type: string
          description: ID autogenerado del usuario
        username:
          type: string
          description: Nombre de usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          enum: [admin, manager, employee]
          description: Rol del usuario en el sistema
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del usuario
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del usuario
      example:
        username: johndoe
        password: Abc123*
        email: johndoe@example.com
        role: admin

    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
      example:
        password: Abc123*
        email: johndoe@example.com

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Employees
    description: Gestión de empleados
  - name: Evaluations
    description: Gestión de evaluaciones
  - name: Questions
    description: Gestión de preguntas
  - name: Auth
    description: Autenticación de usuarios

paths:
  /employees:
    get:
      summary: Listar todos los empleados
      tags: [Employees]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de empleados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      summary: Crear un nuevo empleado
      tags: [Employees]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: Empleado creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

  /employees/{id}:
    get:
      summary: Obtener un empleado por ID
      tags: [Employees]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID del empleado
      responses:
        '200':
          description: Datos del empleado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empleado no encontrado
    put:
      summary: Actualizar un empleado
      tags: [Employees]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID del empleado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Empleado actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empleado no encontrado

  /evaluations:
    get:
      summary: Listar todas las evaluaciones
      tags: [Evaluations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de evaluaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
    post:
      summary: "Crear una nueva evaluación"
      description: "Crea una nueva evaluación y la asocia con preguntas existentes."
      tags:
        - "Evaluations"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                period:
                  type: "string"
                  description: "Periodo de la evaluación"
                status:
                  type: string
                  enum: [activa, cancelada]
                  description: Estado de la evaluación
                type:
                  type: "string"
                  description: "Tipo de evaluación (anual, semestral, etc.)"
                questions:
                  type: "array"
                  items:
                    type: "string"
                  description: "Array de IDs de las preguntas a asociar con la evaluación"
              required:
                - period
                - status
                - type
                - questions
      responses:
        "201":
          description: "Evaluación creada con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    $ref: "#/components/schemas/Evaluation"

  /evaluations/{id}:
    get:
      summary: Obtener una evaluación por ID
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      responses:
        '200':
          description: Datos de la evaluación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Evaluación no encontrada
    put:
      summary: Actualizar una evaluación
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      responses:
        '200':
          description: Evaluación actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Evaluación no encontrada

  /evaluations/{id}/submit:
     post:
      summary: "Enviar respuestas a una evaluación"
      description: "Permite que un evaluador envíe sus respuestas a una evaluación y calcula el puntaje total."
      tags:
        - "Responses"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                evaluationId:
                  type: "string"
                  description: "ID de la evaluación a la que se responde"
                employeeId:
                  type: "string"
                  description: "ID del empleado que está siendo evaluado"
                answers:
                  type: "array"
                  items:
                    type: "object"
                    properties:
                      questionId:
                        type: "string"
                        description: "ID de la pregunta"
                      response:
                        type: "string"
                        description: "Respuesta del evaluador"
                  description: "Array de respuestas para las preguntas de la evaluación"
              required:
                - evaluationId
                - answers
      responses:
        "201":
          description: "Respuestas enviadas y guardadas con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    $ref: "#/components/schemas/Response"

  /evaluations/notify:
    get:
      summary: Enviar notificaciones para evaluaciones pendientes
      tags: [Evaluations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notificaciones enviadas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notificaciones enviadas
        '500':
          description: Error al enviar notificaciones

  /questions:
    get:
      summary: Listar todas las preguntas
      tags: [Questions]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de preguntas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
    post:
      summary: Crear una nueva pregunta
      tags: [Questions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Pregunta creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

  /questions/{id}:
    put:
      summary: Actualizar una pregunta
      tags: [Questions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la pregunta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Pregunta actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Pregunta no encontrada

  /auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: registro creado exitosamente

  /auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          description: Pregunta creada exitosamente
      
  /employees/assign-evaluators/{id}:
    post:
      summary: "Asignar evaluadores a un empleado"
      description: "Asigna uno o más usuarios como evaluadores de un empleado."
      tags:
        - "Employees"
      security:
        - bearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID del empleado"
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                evaluators:
                  type: "array"
                  items:
                    type: "string"
                  description: "Array de IDs de usuarios que serán evaluadores"
              required:
                - evaluators
      responses:
        "200":
          description: "Evaluadores asignados con éxito"
                
  /employees/get-Employee-evaluators/{id}:
    post:
      summary: "Obtener los evaluadores de un empleado"
      description: "Obtiene la lista de evaluadores asignados a un empleado."
      tags:
        - "Employees"
      security:
        - bearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID del empleado"
          schema:
            type: "string"
      responses:
        "200":
          description: "Lista de evaluadores obtenida con éxito"

  /evaluations/responses/employee/{employeeId}:
    get:
      summary: "Obtener respuestas de un empleado"
      description: "Obtiene todas las respuestas de las evaluaciones realizadas a un empleado específico."
      tags:
        - "Responses"
      security:
        - bearerAuth: []
      parameters:
        - name: "employeeId"
          in: "path"
          required: true
          description: "ID del empleado"
          schema:
            type: "string"
      responses:
        "200":
          description: "Respuestas obtenidas con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Response"

  /reports/employee/{employeeId}:
    get:
      summary: "Obtener reporte de un empleado específico"
      description: "Obtiene las evaluaciones y puntajes de un empleado."
      tags:
        - "Reports"
      security:
        - bearerAuth: []
      parameters:
        - name: "employeeId"
          in: "path"
          required: true
          description: "ID del empleado"
          schema:
            type: "string"
      responses:
        "200":
          description: "Reporte obtenido con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Response"
        "404":
          description: "No se encontraron evaluaciones para este empleado"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
  /reports/evaluation/{evaluationId}:
    get:
      summary: "Obtener reporte de una evaluación específica"
      description: "Obtiene los detalles de una evaluación específica, incluyendo los puntajes de todos los empleados."
      tags:
        - "Reports"
      security:
        - bearerAuth: []
      parameters:
        - name: "evaluationId"
          in: "path"
          required: true
          description: "ID de la evaluación"
          schema:
            type: "string"
      responses:
        "200":
          description: "Reporte obtenido con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Response"
        "404":
          description: "No se encontraron respuestas para esta evaluación"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
  /reports/all:
    get:
      summary: "Obtener reporte general de todas las evaluaciones"
      description: "Obtiene un reporte general de todas las evaluaciones y puntajes de todos los empleados."
      tags:
        - "Reports"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Reporte general obtenido con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Response"
        "404":
          description: "No se encontraron evaluaciones"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  message:
                    type: "string"
  /reports/summary:
    get:
      summary: "Obtener resumen general con promedios de puntajes por evaluación"
      description: "Obtiene un resumen general de todas las evaluaciones, mostrando el promedio de puntajes por evaluación."
      tags:
        - "Reports"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Resumen de reportes obtenido con éxito"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: "boolean"
                  data:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        evaluation:
                          type: "string"
                        averageScore:
                          type: "number"