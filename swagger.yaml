openapi: 3.0.0
info:
  title: Employee 360 Evaluation API
  version: 1.0.0
  description: API RESTful para un sistema de evaluación 360 grados de empleados remotos
servers:
  - url: http://localhost:5000/api
    description: Servidor de desarrollo

components:
  schemas:
    Employee:
      type: object
      security:
        - bearerAuth: []
      required:
        - firstName
        - lastName
        - position
        - department
        - hireDate
      properties:
        id:
          type: string
          description: ID autogenerado del empleado
        firstName:
          type: string
          description: Nombre del empleado
        lastName:
          type: string
          description: Apellido del empleado
        position:
          type: string
          description: Puesto del empleado
        department:
          type: string
          description: Departamento del empleado
        hireDate:
          type: string
          format: date
          description: Fecha de contratación del empleado
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del empleado
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del empleado
      example:
        id: 60d5f74f5311234567890abc
        firstName: John
        lastName: Doe
        position: Developer
        department: IT
        hireDate: 2020-01-15

    Evaluation:
      type: object
      required:
        - period
        - status
        - type
        - employee
      properties:
        id:
          type: string
          description: ID autogenerado de la evaluación
        period:
          type: string
          description: Periodo de la evaluación (ej. "Q1 2023")
        status:
          type: string
          enum: [pending, in_progress, completed]
          description: Estado de la evaluación
        type:
          type: string
          description: Tipo de evaluación
        employee:
          $ref: '#/components/schemas/Employee'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la evaluación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la evaluación
      example:
        id: 60d5f74f5311234567890def
        period: "Q1 2023"
        status: pending
        type: "Desempeño"
        employee:
          $ref: '#/components/schemas/Employee'

    Question:
      type: object
      required:
        - text
        - type
      properties:
        id:
          type: string
          description: ID autogenerado de la pregunta
        text:
          type: string
          description: Texto de la pregunta
        type:
          type: string
          enum: [rating, text]
          description: Tipo de pregunta (rating o texto)
        options:
          type: array
          items:
            type: string
          description: Opciones disponibles para preguntas de tipo rating
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la pregunta
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la pregunta
      example:
        id: 60d5f74f5311234567890ghi
        text: "¿Cómo calificaría la capacidad de comunicación del empleado?"
        type: rating
        options:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"

    Response:
      type: object
      required:
        - evaluation
        - question
        - respondent
        - answer
      properties:
        id:
          type: string
          description: ID autogenerado de la respuesta
        evaluation:
          $ref: '#/components/schemas/Evaluation'
        question:
          $ref: '#/components/schemas/Question'
        respondent:
          $ref: '#/components/schemas/User'
        answer:
          type: string
          description: Respuesta proporcionada por el evaluador
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la respuesta
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la respuesta
      example:
        id: 60d5f74f5311234567890jkl
        evaluation:
          $ref: '#/components/schemas/Evaluation'
        question:
          $ref: '#/components/schemas/Question'
        respondent:
          $ref: '#/components/schemas/User'
        answer: "4"

    User:
      type: object
      required:
        - username
        - email
        - password
        - role
      properties:
        id:
          type: string
          description: ID autogenerado del usuario
        username:
          type: string
          description: Nombre de usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          enum: [admin, manager, employee]
          description: Rol del usuario en el sistema
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del usuario
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del usuario
      example:
        username: johndoe
        password: Abc123*
        email: johndoe@example.com
        role: admin

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Employees
    description: Gestión de empleados
  - name: Evaluations
    description: Gestión de evaluaciones
  - name: Questions
    description: Gestión de preguntas
  - name: Auth
    description: Autenticación de usuarios

paths:
  /employees:
    get:
      summary: Listar todos los empleados
      tags: [Employees]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de empleados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    post:
      summary: Crear un nuevo empleado
      tags: [Employees]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: Empleado creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'

  /employees/{id}:
    get:
      summary: Obtener un empleado por ID
      tags: [Employees]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID del empleado
      responses:
        '200':
          description: Datos del empleado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empleado no encontrado
    put:
      summary: Actualizar un empleado
      tags: [Employees]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID del empleado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Empleado actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Empleado no encontrado

  /evaluations:
    get:
      summary: Listar todas las evaluaciones
      tags: [Evaluations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de evaluaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
    post:
      summary: Crear una nueva evaluación
      tags: [Evaluations]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      responses:
        '201':
          description: Evaluación creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'

  /evaluations/{id}:
    get:
      summary: Obtener una evaluación por ID
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      responses:
        '200':
          description: Datos de la evaluación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Evaluación no encontrada
    put:
      summary: Actualizar una evaluación
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      responses:
        '200':
          description: Evaluación actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Evaluación no encontrada

  /evaluations/{id}/submit:
    post:
      summary: Enviar una evaluación completada
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      responses:
        '200':
          description: Evaluación enviada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '404':
          description: Evaluación no encontrada
  /evaluations/{id}/scores:
    get:
      summary: Calcular puntuaciones de evaluación
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      responses:
        '200':
          description: Puntuación promedio calculada
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageScore:
                    type: number
                    description: Puntuación promedio de la evaluación
        '404':
          description: Evaluación no encontrada
        '500':
          description: Error al calcular las puntuaciones

  /evaluations/{id}/reviewers:
    put:
      summary: Asignar evaluadores a un empleado para una evaluación
      tags: [Evaluations]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la evaluación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewerIds:
                  type: array
                  items:
                    type: string
                  description: IDs de los evaluadores asignados
      responses:
        '200':
          description: Evaluadores asignados exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
        '400':
          description: Error en los IDs de los evaluadores proporcionados
        '404':
          description: Evaluación no encontrada
        '500':
          description: Error al asignar evaluadores

  /evaluations/notify:
    get:
      summary: Enviar notificaciones para evaluaciones pendientes
      tags: [Evaluations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notificaciones enviadas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notificaciones enviadas
        '500':
          description: Error al enviar notificaciones

  /questions:
    get:
      summary: Listar todas las preguntas
      tags: [Questions]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de preguntas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
    post:
      summary: Crear una nueva pregunta
      tags: [Questions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Pregunta creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'

  /questions/{id}:
    put:
      summary: Actualizar una pregunta
      tags: [Questions]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID de la pregunta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Pregunta actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '404':
          description: Pregunta no encontrada

  /auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario autenticado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Credenciales inválidas

